import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'
import {signIn, signOut, useSession} from 'next-auth/react'

import {trpc} from '@utils/trpc'

import {type NextPage} from 'next'

const Home: NextPage = () => {
	const hello = trpc.example.hello.useQuery({text: 'from tRPC'})

	return (
		<>
			<Head>
				<title>Create T3 App</title>
				<meta name='description' content='Generated by create-t3-app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className='flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-gray-800 to-blue-800'>
				<div className='container flex flex-col items-center justify-center gap-12 px-4 py-16 '>
					<Link href='https://github.com/riolly/create-t3-app/' target='_blank'>
						<h1 className='text-5xl font-extrabold leading-normal text-gray-50 md:text-[5rem]'>
							Create{' '}
							<Image
								className='-mx-2 inline align-text-bottom'
								width={112}
								height={112}
								src='/mstile-144x144.png'
								alt='T3'
							/>{' '}
							App
						</h1>
					</Link>
					<p className='-mt-8 text-2xl text-gray-200'>
						Riolly&apos;s opinionated version of&nbsp;
						<Link
							href='https://create.t3.gg/'
							className='font-highlight underline decoration-blue-300 underline-offset-4'
						>
							create-t3-app
						</Link>
					</p>

					<div className='grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8'>
						<TechnologyCard
							name='NextJS'
							description='The React framework for production'
							documentation='https://nextjs.org/'
						/>
						<TechnologyCard
							name='TypeScript'
							description='Strongly typed programming language that builds on JavaScript, giving you better tooling at any scale'
							documentation='https://www.typescriptlang.org/'
						/>
						<TechnologyCard
							name='TailwindCSS'
							description='Rapidly build modern websites without ever leaving your HTML'
							documentation='https://tailwindcss.com/'
						/>
						<TechnologyCard
							name='tRPC'
							description='End-to-end typesafe APIs made easy'
							documentation='https://trpc.io/'
						/>
						<TechnologyCard
							name='Next-Auth'
							description='Authentication for Next.js'
							documentation='https://next-auth.js.org/'
						/>
						<TechnologyCard
							name='Prisma'
							description='Build data-driven JavaScript & TypeScript apps in less time'
							documentation='https://www.prisma.io/docs/'
						/>
					</div>

					<div className='flex flex-col items-center gap-2'>
						<p className='text-2xl text-gray-200'>
							{hello.data ? hello.data.greeting : 'Loading tRPC query...'}
						</p>
						<AuthShowcase />
					</div>
				</div>
			</main>
		</>
	)
}

export default Home

const AuthShowcase: React.FC = () => {
	const {data: sessionData} = useSession()

	const {data: secretMessage} = trpc.auth.getSecretMessage.useQuery(
		undefined, // no input
		{enabled: sessionData?.user !== undefined}
	)

	return (
		<div className='flex flex-col items-center justify-center gap-4'>
			<p className='text-center text-2xl text-gray-200'>
				{sessionData && <span>Logged in as {sessionData?.user?.name}</span>}
				{secretMessage && <span> - {secretMessage}</span>}
			</p>
			<button
				className='rounded-full bg-white/10 px-10 py-3 font-semibold text-gray-200 no-underline transition hover:bg-white/20'
				onClick={sessionData ? () => signOut() : () => signIn()}
			>
				{sessionData ? 'Sign out' : 'Sign in'}
			</button>
		</div>
	)
}

type TechnologyCardProps = {
	name: string
	description: string
	documentation: string
}

const TechnologyCard: React.FC<TechnologyCardProps> = ({
	name,
	description,
	documentation,
}) => {
	return (
		<Link
			className='flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 pl-6 pt-6 text-gray-200 hover:bg-white/20'
			href={documentation}
		>
			<h3 className='text-2xl font-bold text-gray-50'>{name} â†’</h3>
			<p className='text-lg'>{description}</p>
		</Link>
	)
}
